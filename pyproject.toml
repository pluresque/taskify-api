[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = { "" = "src" }

[tool.mypy]
python_version = "3.9"
plugins = "pydantic.mypy, sqlalchemy.ext.mypy.plugin"
ignore_missing_imports = true
disallow_untyped_defs = true
exclude = "src/tests"
warn_unreachable = true
implicit_reexport = true
show_error_codes = true
show_column_numbers = true

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

line-length = 88
indent-width = 4
target-version = "py39"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F", "Q"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["E402", "F401"]
"**/{tests,docs,tools}/*" = ["E402"]

[project]
name = "TaskifyAPI"
version = "0.0.1"
description = "FastAPI based API for Taskify"
requires-python = ">=3.9"
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
]

dependencies = [
    "pydantic==1.10.13",
    "python-dotenv==0.21.0",
    "pyhumps==1.6.1",
    "fastapi==0.85.0",
    "fastapi-users[sqlalchemy]==10.1.5",
    "fastapi-users-db-sqlalchemy==4.0.3",
    "starlette==0.20.4",
    "SQLAlchemy==1.4.41",
    "uvicorn==0.22.0",
    "asyncpg==0.26.0",
    "alembic==1.5.8",
    "emails==0.6",
    "jinja2==3.1.3",
]

[project.optional-dependencies]
test = [
    "pytest",
    "pytest-asyncio",
    "asgi_lifespan",
    "httpx",
    "pytest-lazy-fixture",
]
lint = [
    "ruff",
]

[project.urls]
"Homepage" = "https://github.com/pluresque/taskify-api"
"Bug Tracker" = "https://github.com/tishka17/taskify-api"